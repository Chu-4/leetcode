`给你一个字符串 s，找到 s 中最长的回文子串。

 

示例 1：

输入：s = "babad"
输出："bab"
解释："aba" 同样是符合题意的答案。
示例 2：

输入：s = "cbbd"
输出："bb"
示例 3：

输入：s = "a"
输出："a"
示例 4：

输入：s = "ac"
输出："a"
 

提示：

1 <= s.length <= 1000
s 仅由数字和英文字母（大写和/或小写）组成`


/**
 * @param {string} s
 * @return {string}
 */
var longestPalindrome = function(s) {
  let res = ''
  if (s.length < 2) {
    return s
  }
  // 回文字符串只有以下两种情况，奇数（aba）或偶数（abba）,遍历s，将每个字符当做中心值的两种情况都计算一次，对比取最大长度
  for (let i=0;i<s.length;i++) {
    checkString(i,i) // 奇数回文串
    checkString(i, i+1) // 偶数回文串
  }
  
  function checkString (m, n) {
      while(m>=0 && n<s.length && s[m]===s[n]) {
        m--;
        n++
      }
    
      // m n为不满足条件的边界值，则满足条件的字符串不包含m和n，应为m+1和n-1，m+1和n-1之间的距离为(n-1)-(m+1)+1
      if ((n-1)-(m+1)+1 > res.length) {
        res = s.slice(m+1, n) // 应为m+1到n-1，slice取start和end（不包含end）之间的部分，end为n
      }
   }
  return res
};
